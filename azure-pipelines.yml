# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- "*"

stages:
  - stage: test
    jobs:
      - job: 'validateandtest'
        pool:
          vmimage: windows-latest
        steps:
        - task: AzureResourceManagerTemplateDeployment@3
          inputs:
            deploymentScope: 'Resource Group'
            azureResourceManagerConnection: 'AzureConnection'
            subscriptionId: '33af1396-da2d-436f-97cd-26b6d1800e2d'
            action: 'Create Or Update Resource Group'
            resourceGroupName: 'ARMDeploymentTest'
            location: 'Central US'
            templateLocation: 'Linked artifact'
            csmFile: '$(Build.SourcesDirectory)/StorageAccount/azuredeploy.json'
            csmParametersFile: '$(Build.SourcesDirectory)/StorageAccount/azuredeploy.parameters.json'
            overrideParameters: 'StorageAccounPrefix “examp”'
            deploymentMode: 'Validation'
            - task: PowerShell@2
              inputs:
                targetType: 'inline'
                script: 'Install-Module Az.Resources -RequiredVersion 1.12.1-preview -AllowPrerelease -Force -Scope CurrentUser'
                - task: AzurePowerShell@5
                  inputs:
                    ScriptType: 'InlineScript'
                    Inline: |
                      $Parameters = @{
                        ResourcegroupName     = "ARMDeploymentTest"
                        Templatefile          = ".\StorageAccount\azuredeploy.json"
                        TemplateParameterfile = ".\StorageAccount\azuredeploy.parameters.json"
                        Mode                  = 'Incremental'
                       }
                      $Result = Get-AzResourceGroupDeploymentWhatIfResult @Parameters
                      $Result
                    azurePowerShellVersion: 'LatestVersion'

